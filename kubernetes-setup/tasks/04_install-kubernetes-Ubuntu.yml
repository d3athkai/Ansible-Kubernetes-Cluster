---
  ###
  ###
  # SETUP KUBERNETES: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
  ###
  ###
  - name: Install packages to allow apt to use a repository over HTTPS
    ansible.builtin.apt:
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
      state: latest
      update_cache: yes
      autoclean: yes

  - name: Remove any older Kubernetes’s official GPG key
    ansible.builtin.file:
      path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      state: absent

  - name: Add Kubernetes’s official GPG key
    ansible.builtin.shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    args:
      executable: /bin/bash

  - name: Set permission for Kubernetes’s official GPG key
    ansible.builtin.file:
      path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      owner: root
      group: root
      mode: '644'

  - name: Add Kubernetes's stable Repository
    ansible.builtin.apt_repository:
      repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /"
      filename: "kubernetes"
      state: present
      update_cache: true


  - name: Install kubeadm
    ansible.builtin.apt:
      name: kubeadm
      state: present
      update_cache: yes
      autoclean: yes

  - name: apt-mark hold kubeadm
    ansible.builtin.dpkg_selections:
      name: kubeadm
      selection: hold

  - name: Get kubeadm version
    ansible.builtin.command: "kubeadm version -o short"
    register: kubeadm_version

  - name: Display kubeadm version
    ansible.builtin.debug: msg="{{ kubeadm_version.stdout }}"


  - name: Install kubectl
    ansible.builtin.apt:
      name: kubectl
      state: present
      update_cache: yes
      autoclean: yes

  - name: apt-mark hold kubectl
    ansible.builtin.dpkg_selections:
      name: kubectl
      selection: hold

  - name: Get kubectl version
    ansible.builtin.command: "kubectl version --client=true"
    register: kubectl_version

  - name: Display kubectl version
    ansible.builtin.debug: msg="{{ kubectl_version.stdout_lines }}"


  - name: Install kubelet
    ansible.builtin.apt:
      name: kubelet
      state: present
      update_cache: yes
      autoclean: yes

  - name: apt-mark hold kubelet
    ansible.builtin.dpkg_selections:
      name: kubelet
      selection: hold

  - name: Get kubelet version
    ansible.builtin.command: "kubelet --version"
    register: kubelet_version

  - name: Display kubelet version
    ansible.builtin.debug: msg="{{ kubelet_version.stdout }}"

  - name: Restart kubelet Service
    ansible.builtin.systemd_service:
      state: restarted
      name: kubelet
      enabled: true