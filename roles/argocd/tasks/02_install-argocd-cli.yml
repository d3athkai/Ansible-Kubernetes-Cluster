---
  ###
  ###
  # INSTALL ARGO CD CLI
  ###
  ###
  - name: Download Argo CD
    ansible.builtin.get_url:
      url: "https://github.com/argoproj/argo-cd/releases/download/v{{ argocd_cli_version }}/argocd-linux-amd64"
      dest: /usr/local/bin/argocd
      owner: root
      group: root
      mode: '0755'

  - name: Get Argo CD version
    ansible.builtin.command: "argocd version --client --short"
    register: argocd_version

  - name: Display Argo CD version
    ansible.builtin.debug: msg="{{ argocd_version.stdout }}"


  - name: Get Argo CD initial admin password
    ansible.builtin.shell: "kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d;echo"
    args:
      executable: /bin/bash
    register: argocd_initial_admin_password

  - name: Login to Argo CD server
    ansible.builtin.command: "argocd login --grpc-web --insecure {{ argocd_url }} --username admin --password {{ argocd_initial_admin_password.stdout }}"

  - name: Update Argo CD admin password
    ansible.builtin.command: "argocd account update-password --account admin --current-password {{ argocd_initial_admin_password.stdout }} --new-password {{ argocd_admin_password }}"

  - name: Update Kubernetes Cluster
    ansible.builtin.command: "argocd cluster set in-cluster --name default-cluster --namespace ''"

  - name: Get Argo CD Cluster List
    ansible.builtin.command: "argocd cluster list"
    register: argocd_cluster_list

  - name: Display Argo CD Cluster List
    ansible.builtin.debug: msg="{{ argocd_cluster_list.stdout_lines }}"

  - name: Logout of Argo CD server
    ansible.builtin.command: "argocd logout {{ argocd_url }}"